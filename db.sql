-------DATA BASE---------

CREATE DATABASE FIDE_FDB_ESTUDIO_CASO_DOS
GO

-----USE DATA BASE-------

USE FIDE_FDB_ESTUDIO_CASO_DOS;
GO

---------TABLES----------

CREATE TABLE FIDE_ESTADO_TB (
    ID_ESTADO INT,
    ESTADO VARCHAR(50) NOT NULL,
    CONSTRAINT FIDE_ESTADO_ID_PK PRIMARY KEY (ID_ESTADO)
);
GO

CREATE TABLE FIDE_ESPECIALIDAD_TB (
    ID_ESPECIALIDAD INT,
    NOMBRE_ESPECIALIDAD VARCHAR(100) NOT NULL,
    ID_ESTADO INT,
    CONSTRAINT FIDE_ESPECIALIDAD_ID_PK PRIMARY KEY (ID_ESPECIALIDAD),
    CONSTRAINT FIDE_ESPECIALIDAD_ESTADO_FK FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);
GO

CREATE TABLE FIDE_ALUMNO_TB (
    ID_ALUMNO VARCHAR(10),
    NOMBRE_ALUMNO VARCHAR(100) NOT NULL,
    PRIMER_APELLIDO VARCHAR(100) NOT NULL,
    SEGUNDO_APELLIDO VARCHAR(100) NOT NULL,
    ID_ESPECIALIDAD INT,
    ID_ESTADO INT,
    CONSTRAINT FIDE_ALUMNO_ID_PK PRIMARY KEY (ID_ALUMNO),
    CONSTRAINT FIDE_ALUMNO_ESPECIALIDAD_FK FOREIGN KEY (ID_ESPECIALIDAD) REFERENCES FIDE_ESPECIALIDAD_TB(ID_ESPECIALIDAD),
    CONSTRAINT FIDE_ALUMNO_ESTADO_FK FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);
GO

CREATE TABLE FIDE_OFICINA_TB (
    ID_OFICINA INT,
    OFICINA VARCHAR(20) NOT NULL,
    ID_ESTADO INT,
    CONSTRAINT FIDE_OFICINA_ID_PK PRIMARY KEY (ID_OFICINA),
    CONSTRAINT FIDE_OFICINA_ESTADO_FK FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);
GO

CREATE TABLE FIDE_DOCENTE_TB (
    ID_DOCENTE INT,
    NOMBRE_DOCENTE VARCHAR(100) NOT NULL,
    ID_OFICINA INT,
    ID_ESTADO INT,
    CONSTRAINT FIDE_DOCENTE_ID_PK PRIMARY KEY (ID_DOCENTE),
    CONSTRAINT FIDE_DOCENTE_OFICINA_FK FOREIGN KEY (ID_OFICINA) REFERENCES FIDE_OFICINA_TB(ID_OFICINA),
    CONSTRAINT FIDE_DOCENTE_ESTADO_FK FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);
GO

CREATE TABLE FIDE_CURSO_TB (
    ID_CURSO VARCHAR(10),
    NOMBRE_CURSO VARCHAR(100) NOT NULL,
    CURSO VARCHAR(5),
    ID_ESTADO INT,
    CONSTRAINT FIDE_CURSO_ID_PK PRIMARY KEY (ID_CURSO),
    CONSTRAINT FIDE_CURSO_ESTADO_FK FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);
GO

CREATE TABLE CURSO_ALUMNOS_TB (
    ID_CURSO VARCHAR(10),
    ID_ALUMNO VARCHAR(10),
    ID_ESTADO INT,
    CONSTRAINT CURSO_ALUMNOS_PK PRIMARY KEY (ID_CURSO, ID_ALUMNO),
    CONSTRAINT CURSO_ALUMNOS_CURSO_FK FOREIGN KEY (ID_CURSO) REFERENCES FIDE_CURSO_TB(ID_CURSO),
    CONSTRAINT CURSO_ALUMNOS_ALUMNO_FK FOREIGN KEY (ID_ALUMNO) REFERENCES FIDE_ALUMNO_TB(ID_ALUMNO),
    CONSTRAINT CURSO_ALUMNOS_ESTADO_FK FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);
GO

CREATE TABLE FIDE_CURSO_IMPARTIDO_TB (
    ID_CURSO VARCHAR(10),
    ID_DOCENTE INT,
    ID_ESTADO INT,
    CONSTRAINT FIDE_CURSO_IMPARTIDO_PK PRIMARY KEY (ID_CURSO, ID_DOCENTE),
    CONSTRAINT FIDE_CURSO_IMPARTIDO_CURSO_FK FOREIGN KEY (ID_CURSO) REFERENCES FIDE_CURSO_TB(ID_CURSO),
    CONSTRAINT FIDE_CURSO_IMPARTIDO_DOCENTE_FK FOREIGN KEY (ID_DOCENTE) REFERENCES FIDE_DOCENTE_TB(ID_DOCENTE),
    CONSTRAINT FIDE_CURSO_IMPARTIDO_ESTADO_FK FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);
GO

CREATE TABLE FIDE_ACCION_AUDITORIA_TB (
    ID_ACCION_AUDITORIA INT,
    ACCION VARCHAR(50) NOT NULL,
    ID_ESTADO INT,
    CONSTRAINT FIDE_ACCION_AUDITORIA_ID_PK PRIMARY KEY (ID_ACCION_AUDITORIA),
    CONSTRAINT FIDE_ACCION_AUDITORIA_ESTADO_FK FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);
GO

CREATE TABLE FIDE_AUDITORIA_TB (
    ID_AUDITORIA INT,
    ID_ACCION_AUDITORIA INT,
    TABLA_AFECTADA VARCHAR(100) NOT NULL,
    FECHA_HORA DATETIME NOT NULL,
    ID_DOCENTE INT,
    ID_ESTADO INT,
    CONSTRAINT FIDE_AUDITORIA_ID_PK PRIMARY KEY (ID_AUDITORIA),
    CONSTRAINT FIDE_AUDITORIA_ACCION_FK FOREIGN KEY (ID_ACCION_AUDITORIA) REFERENCES FIDE_ACCION_AUDITORIA_TB(ID_ACCION_AUDITORIA),
    CONSTRAINT FIDE_AUDITORIA_DOCENTE_FK FOREIGN KEY (ID_DOCENTE) REFERENCES FIDE_DOCENTE_TB(ID_DOCENTE),
    CONSTRAINT FIDE_AUDITORIA_ESTADO_FK FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);
GO

-----------------FIDE_ESTADO_TB---------------------

SELECT * FROM FIDE_ESTADO_TB;
GO 

-------- INSERTAR ESTADO --------

CREATE PROCEDURE FIDE_ESTADO_INSERTAR_SP
    @ID_ESTADO INT,
    @ESTADO VARCHAR(50)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM FIDE_ESTADO_TB WHERE ID_ESTADO = @ID_ESTADO)
    BEGIN
        RAISERROR('EL ID DEL ESTADO YA EXISTE.', 16,1);
        RETURN;
    END;

    INSERT INTO FIDE_ESTADO_TB (ID_ESTADO, ESTADO)
    VALUES (@ID_ESTADO, @ESTADO);
END;
GO

EXEC FIDE_ESTADO_INSERTAR_SP 1, 'ACTIVO';
GO
EXEC FIDE_ESTADO_INSERTAR_SP 2, 'INACTIVO';
GO
EXEC FIDE_ESTADO_INSERTAR_SP 3, 'PENDIENTE';
GO
EXEC FIDE_ESTADO_INSERTAR_SP 4, 'SUSPENDIDO';
GO
EXEC FIDE_ESTADO_INSERTAR_SP 5, 'ELIMINADO';
GO


-----------------FIDE_ESPECIALIDAD_TB---------------------

SELECT * FROM FIDE_ESPECIALIDAD_TB;
GO 

-------- INSERTAR ESPECIALIDAD --------

CREATE PROCEDURE FIDE_ESPECIALIDAD_INSERTAR_SP
    @ID_ESPECIALIDAD INT,
    @NOMBRE_ESPECIALIDAD VARCHAR(100),
    @ID_ESTADO INT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM FIDE_ESPECIALIDAD_TB WHERE ID_ESPECIALIDAD = @ID_ESPECIALIDAD)
    BEGIN
        RAISERROR('EL ID_ESPECIALIDAD YA EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ESTADO_TB WHERE ID_ESTADO = @ID_ESTADO)
    BEGIN
        RAISERROR('EL ID_ESTADO NO EXISTE.', 16, 1);
        RETURN;
    END;

    INSERT INTO FIDE_ESPECIALIDAD_TB (ID_ESPECIALIDAD, NOMBRE_ESPECIALIDAD, ID_ESTADO)
    VALUES (@ID_ESPECIALIDAD, @NOMBRE_ESPECIALIDAD, @ID_ESTADO);
END;
GO

EXEC FIDE_ESPECIALIDAD_INSERTAR_SP 101, 'Ingeniería de Software', 1;
GO
EXEC FIDE_ESPECIALIDAD_INSERTAR_SP 102, 'Ciberseguridad', 1;
GO
EXEC FIDE_ESPECIALIDAD_INSERTAR_SP 103, 'Bases de Datos', 2;
GO
EXEC FIDE_ESPECIALIDAD_INSERTAR_SP 104, 'Matemática Aplicada', 1;
GO
EXEC FIDE_ESPECIALIDAD_INSERTAR_SP 105, 'Redes y Telecomunicaciones', 3;
GO


-----------------FIDE_ALUMNO_TB---------------------

SELECT * FROM FIDE_ALUMNO_TB;
GO 

-------- INSERTAR ALUMNO --------

CREATE PROCEDURE FIDE_ALUMNO_INSERTAR_SP
    @ID_ALUMNO VARCHAR(10),
    @NOMBRE_ALUMNO VARCHAR(100),
    @PRIMER_APELLIDO VARCHAR(100),
    @SEGUNDO_APELLIDO VARCHAR(100),
    @ID_ESPECIALIDAD INT,
    @ID_ESTADO INT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM FIDE_ALUMNO_TB WHERE ID_ALUMNO = @ID_ALUMNO)
    BEGIN
        RAISERROR('EL ID_ALUMNO YA EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ESPECIALIDAD_TB WHERE ID_ESPECIALIDAD = @ID_ESPECIALIDAD)
    BEGIN
        RAISERROR('EL ID_ESPECIALIDAD NO EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ESTADO_TB WHERE ID_ESTADO = @ID_ESTADO)
    BEGIN
        RAISERROR('EL ID_ESTADO NO EXISTE.', 16, 1);
        RETURN;
    END;

    INSERT INTO FIDE_ALUMNO_TB (ID_ALUMNO, NOMBRE_ALUMNO, PRIMER_APELLIDO, SEGUNDO_APELLIDO, ID_ESPECIALIDAD, ID_ESTADO)
    VALUES (@ID_ALUMNO, @NOMBRE_ALUMNO, @PRIMER_APELLIDO, @SEGUNDO_APELLIDO, @ID_ESPECIALIDAD, @ID_ESTADO);
END;
GO

EXEC FIDE_ALUMNO_INSERTAR_SP 'A001', 'Juan', 'Pérez', 'Ramírez', 101, 1;
GO
EXEC FIDE_ALUMNO_INSERTAR_SP 'A002', 'María', 'López', 'García', 102, 1;
GO
EXEC FIDE_ALUMNO_INSERTAR_SP 'A003', 'Carlos', 'Jiménez', 'Vargas', 101, 2;
GO
EXEC FIDE_ALUMNO_INSERTAR_SP 'A004', 'Ana', 'Torres', 'Rojas', 103, 1;
GO
EXEC FIDE_ALUMNO_INSERTAR_SP 'A005', 'Luis', 'Castro', 'Hernández', 104, 3;
GO


-----------------FIDE_OFICINA_TB---------------------

SELECT * FROM FIDE_OFICINA_TB;
GO 

-------- INSERTAR OFICINA --------

CREATE PROCEDURE FIDE_OFICINA_INSERTAR_SP
    @ID_OFICINA INT,
    @OFICINA VARCHAR(20),
    @ID_ESTADO INT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM FIDE_OFICINA_TB WHERE ID_OFICINA = @ID_OFICINA)
    BEGIN
        RAISERROR('EL ID_OFICINA YA EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ESTADO_TB WHERE ID_ESTADO = @ID_ESTADO)
    BEGIN
        RAISERROR('EL ID_ESTADO NO EXISTE.', 16, 1);
        RETURN;
    END;

    INSERT INTO FIDE_OFICINA_TB (ID_OFICINA, OFICINA, ID_ESTADO)
    VALUES (@ID_OFICINA, @OFICINA, @ID_ESTADO);
END;
GO

EXEC FIDE_OFICINA_INSERTAR_SP 301, 'Oficina Central', 1;
GO
EXEC FIDE_OFICINA_INSERTAR_SP 302, 'Aulas Norte', 1;
GO
EXEC FIDE_OFICINA_INSERTAR_SP 303, 'Edificio C', 2;
GO
EXEC FIDE_OFICINA_INSERTAR_SP 304, 'Laboratorios', 1;
GO
EXEC FIDE_OFICINA_INSERTAR_SP 305, 'Extensión Sur', 3;
GO


-----------------FIDE_DOCENTE_TB---------------------

SELECT * FROM FIDE_DOCENTE_TB;
GO 

-------- INSERTAR DOCENTE --------

CREATE PROCEDURE FIDE_DOCENTE_INSERTAR_SP
    @ID_DOCENTE INT,
    @NOMBRE_DOCENTE VARCHAR(100),
    @ID_OFICINA INT,
    @ID_ESTADO INT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM FIDE_DOCENTE_TB WHERE ID_DOCENTE = @ID_DOCENTE)
    BEGIN
        RAISERROR('EL ID_DOCENTE YA EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_OFICINA_TB WHERE ID_OFICINA = @ID_OFICINA)
    BEGIN
        RAISERROR('EL ID_OFICINA NO EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ESTADO_TB WHERE ID_ESTADO = @ID_ESTADO)
    BEGIN
        RAISERROR('EL ID_ESTADO NO EXISTE.', 16, 1);
        RETURN;
    END;

    INSERT INTO FIDE_DOCENTE_TB (ID_DOCENTE, NOMBRE_DOCENTE, ID_OFICINA, ID_ESTADO)
    VALUES (@ID_DOCENTE, @NOMBRE_DOCENTE, @ID_OFICINA, @ID_ESTADO);
END;
GO

EXEC FIDE_DOCENTE_INSERTAR_SP 501, 'Andrea Rojas', 301, 1;
GO
EXEC FIDE_DOCENTE_INSERTAR_SP 502, 'Fernando Gómez', 302, 1;
GO
EXEC FIDE_DOCENTE_INSERTAR_SP 503, 'Sofía Mora', 303, 2;
GO
EXEC FIDE_DOCENTE_INSERTAR_SP 504, 'Daniel Salas', 304, 1;
GO
EXEC FIDE_DOCENTE_INSERTAR_SP 505, 'Laura Vega', 305, 3;
GO


-----------------FIDE_CURSO_TB---------------------

SELECT * FROM FIDE_CURSO_TB;
GO 

-------- INSERTAR CURSO --------

CREATE PROCEDURE FIDE_CURSO_INSERTAR_SP
    @ID_CURSO VARCHAR(10),
    @NOMBRE_CURSO VARCHAR(100),
    @CURSO VARCHAR(5),
    @ID_ESTADO INT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM FIDE_CURSO_TB WHERE ID_CURSO = @ID_CURSO)
    BEGIN
        RAISERROR('EL ID_CURSO YA EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ESTADO_TB WHERE ID_ESTADO = @ID_ESTADO)
    BEGIN
        RAISERROR('EL ID_ESTADO NO EXISTE.', 16, 1);
        RETURN;
    END;

    INSERT INTO FIDE_CURSO_TB (ID_CURSO, NOMBRE_CURSO, CURSO, ID_ESTADO)
    VALUES (@ID_CURSO, @NOMBRE_CURSO, @CURSO, @ID_ESTADO);
END;
GO

EXEC FIDE_CURSO_INSERTAR_SP 'C001', 'Programación I', '101', 1;
GO
EXEC FIDE_CURSO_INSERTAR_SP 'C002', 'Redes Básicas', '102', 1;
GO
EXEC FIDE_CURSO_INSERTAR_SP 'C003', 'Criptografía', '103', 2;
GO
EXEC FIDE_CURSO_INSERTAR_SP 'C004', 'Cálculo II', '104', 1;
GO
EXEC FIDE_CURSO_INSERTAR_SP 'C005', 'SQL Avanzado', '105', 3;
GO


-----------------CURSO_ALUMNOS_TB---------------------

SELECT * FROM CURSO_ALUMNOS_TB;
GO 

-------- INSERTAR CURSO ALUMNO --------

CREATE PROCEDURE CURSO_ALUMNOS_INSERTAR_SP
    @ID_CURSO VARCHAR(10),
    @ID_ALUMNO VARCHAR(10),
    @ID_ESTADO INT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM CURSO_ALUMNOS_TB WHERE ID_CURSO = @ID_CURSO AND ID_ALUMNO = @ID_ALUMNO)
    BEGIN
        RAISERROR('LA RELACIÓN CURSO-ALUMNO YA EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_CURSO_TB WHERE ID_CURSO = @ID_CURSO)
    BEGIN
        RAISERROR('EL ID_CURSO NO EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ALUMNO_TB WHERE ID_ALUMNO = @ID_ALUMNO)
    BEGIN
        RAISERROR('EL ID_ALUMNO NO EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ESTADO_TB WHERE ID_ESTADO = @ID_ESTADO)
    BEGIN
        RAISERROR('EL ID_ESTADO NO EXISTE.', 16, 1);
        RETURN;
    END;

    INSERT INTO CURSO_ALUMNOS_TB (ID_CURSO, ID_ALUMNO, ID_ESTADO)
    VALUES (@ID_CURSO, @ID_ALUMNO, @ID_ESTADO);
END;
GO

EXEC CURSO_ALUMNOS_INSERTAR_SP 'C001', 'A001', 1;
GO
EXEC CURSO_ALUMNOS_INSERTAR_SP 'C002', 'A002', 1;
GO
EXEC CURSO_ALUMNOS_INSERTAR_SP 'C003', 'A003', 2;
GO
EXEC CURSO_ALUMNOS_INSERTAR_SP 'C004', 'A004', 1;
GO
EXEC CURSO_ALUMNOS_INSERTAR_SP 'C005', 'A005', 3;
GO


-----------------FIDE_CURSO_IMPARTIDO_TB---------------------

SELECT * FROM FIDE_CURSO_IMPARTIDO_TB;
GO 

-------- INSERTAR CURSO IMPARTIDO --------

CREATE PROCEDURE FIDE_CURSO_IMPARTIDO_INSERTAR_SP
    @ID_CURSO VARCHAR(10),
    @ID_DOCENTE INT,
    @ID_ESTADO INT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM FIDE_CURSO_IMPARTIDO_TB WHERE ID_CURSO = @ID_CURSO AND ID_DOCENTE = @ID_DOCENTE)
    BEGIN
        RAISERROR('LA RELACIÓN CURSO-DOCENTE YA EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_CURSO_TB WHERE ID_CURSO = @ID_CURSO)
    BEGIN
        RAISERROR('EL ID_CURSO NO EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_DOCENTE_TB WHERE ID_DOCENTE = @ID_DOCENTE)
    BEGIN
        RAISERROR('EL ID_DOCENTE NO EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ESTADO_TB WHERE ID_ESTADO = @ID_ESTADO)
    BEGIN
        RAISERROR('EL ID_ESTADO NO EXISTE.', 16, 1);
        RETURN;
    END;

    INSERT INTO FIDE_CURSO_IMPARTIDO_TB (ID_CURSO, ID_DOCENTE, ID_ESTADO)
    VALUES (@ID_CURSO, @ID_DOCENTE, @ID_ESTADO);
END;
GO

EXEC FIDE_CURSO_IMPARTIDO_INSERTAR_SP 'C001', 501, 1;
GO
EXEC FIDE_CURSO_IMPARTIDO_INSERTAR_SP 'C002', 502, 1;
GO
EXEC FIDE_CURSO_IMPARTIDO_INSERTAR_SP 'C003', 503, 2;
GO
EXEC FIDE_CURSO_IMPARTIDO_INSERTAR_SP 'C004', 504, 1;
GO
EXEC FIDE_CURSO_IMPARTIDO_INSERTAR_SP 'C005', 505, 3;
GO


-----------------FIDE_ACCION_AUDITORIA_TB---------------------

SELECT * FROM FIDE_ACCION_AUDITORIA_TB;
GO 

-------- INSERTAR ACCION AUDITORIA --------

CREATE PROCEDURE FIDE_ACCION_AUDITORIA_INSERTAR_SP
    @ID_ACCION_AUDITORIA INT,
    @ACCION VARCHAR(50),
    @ID_ESTADO INT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM FIDE_ACCION_AUDITORIA_TB WHERE ID_ACCION_AUDITORIA = @ID_ACCION_AUDITORIA)
    BEGIN
        RAISERROR('EL ID_ACCION_AUDITORIA YA EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ESTADO_TB WHERE ID_ESTADO = @ID_ESTADO)
    BEGIN
        RAISERROR('EL ID_ESTADO NO EXISTE.', 16, 1);
        RETURN;
    END;

    INSERT INTO FIDE_ACCION_AUDITORIA_TB (ID_ACCION_AUDITORIA, ACCION, ID_ESTADO)
    VALUES (@ID_ACCION_AUDITORIA, @ACCION, @ID_ESTADO);
END;
GO

EXEC FIDE_ACCION_AUDITORIA_INSERTAR_SP 1, 'INSERT', 1;
GO
EXEC FIDE_ACCION_AUDITORIA_INSERTAR_SP 2, 'UPDATE', 1;
GO
EXEC FIDE_ACCION_AUDITORIA_INSERTAR_SP 3, 'DELETE', 1;
GO
EXEC FIDE_ACCION_AUDITORIA_INSERTAR_SP 4, 'LOGIN', 1;
GO
EXEC FIDE_ACCION_AUDITORIA_INSERTAR_SP 5, 'LOGOUT', 1;
GO


-----------------FIDE_AUDITORIA_TB---------------------

SELECT * FROM FIDE_AUDITORIA_TB;
GO 

-------- INSERTAR AUDITORIA --------

CREATE PROCEDURE FIDE_AUDITORIA_INSERTAR_SP
    @ID_AUDITORIA INT,
    @ID_ACCION_AUDITORIA INT,
    @TABLA_AFECTADA VARCHAR(100),
    @FECHA_HORA DATETIME,
    @ID_DOCENTE INT,
    @ID_ESTADO INT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM FIDE_AUDITORIA_TB WHERE ID_AUDITORIA = @ID_AUDITORIA)
    BEGIN
        RAISERROR('EL ID_AUDITORIA YA EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ACCION_AUDITORIA_TB WHERE ID_ACCION_AUDITORIA = @ID_ACCION_AUDITORIA)
    BEGIN
        RAISERROR('EL ID_ACCION_AUDITORIA NO EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_DOCENTE_TB WHERE ID_DOCENTE = @ID_DOCENTE)
    BEGIN
        RAISERROR('EL ID_DOCENTE NO EXISTE.', 16, 1);
        RETURN;
    END;

    IF NOT EXISTS (SELECT 1 FROM FIDE_ESTADO_TB WHERE ID_ESTADO = @ID_ESTADO)
    BEGIN
        RAISERROR('EL ID_ESTADO NO EXISTE.', 16, 1);
        RETURN;
    END;

    INSERT INTO FIDE_AUDITORIA_TB (ID_AUDITORIA, ID_ACCION_AUDITORIA, TABLA_AFECTADA, FECHA_HORA, ID_DOCENTE, ID_ESTADO)
    VALUES (@ID_AUDITORIA, @ID_ACCION_AUDITORIA, @TABLA_AFECTADA, @FECHA_HORA, @ID_DOCENTE, @ID_ESTADO);
END;
GO

EXEC FIDE_AUDITORIA_INSERTAR_SP 1, 1, 'FIDE_CURSO_TB', GETDATE(), 501, 1;
GO
EXEC FIDE_AUDITORIA_INSERTAR_SP 2, 2, 'FIDE_ALUMNO_TB', GETDATE(), 502, 1;
GO
EXEC FIDE_AUDITORIA_INSERTAR_SP 3, 3, 'FIDE_ESPECIALIDAD_TB', GETDATE(), 503, 2;
GO
EXEC FIDE_AUDITORIA_INSERTAR_SP 4, 4, 'FIDE_DOCENTE_TB', GETDATE(), 504, 1;
GO
EXEC FIDE_AUDITORIA_INSERTAR_SP 5, 5, 'FIDE_CURSO_IMPARTIDO_TB', GETDATE(), 505, 3;
GO



